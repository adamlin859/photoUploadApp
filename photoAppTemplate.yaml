AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Album data
Resources:
  CDDemoLambda1:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: search-photos
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      CodeUri: ./search-photos
      Description: "Lambda function for CD Demo"
      MemorySize: 128
      Timeout: 30
      Role: "arn:aws:iam::269578278636:role/admin-lambda-role"
      Environment:
        Variables:
          REGION: us-east-1
  CDDemoLambda2:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: index-photos
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      CodeUri: ./index-photos
      Description: "Lambda function for CD Demo"
      MemorySize: 128
      Timeout: 30
      Role: "arn:aws:iam::269578278636:role/admin-lambda-role"
      Environment:
        Variables:
          REGION: us-east-1
  photoBucket:
    Type: 'AWS::S3::Bucket'
    DependsOn: BucketPermission
    Properties:
      BucketName: album-bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:Put'
            Function: !GetAtt 
              - CDDemoLambda2
              - Arn
  BucketPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref CDDemoLambda2
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:s3:::album-bucket'
  photoBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref photoBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref photoBucket
                - /*
            Principal: '*'
            Sid: AllowPublicRead